XenaScan("pan")
curr.query <- curr.cohort %>% XenaGenerate() %>%
XenaQuery() %>% XenaDownload(destdir = "/users/yizhaoluan/projects/datasets/Xena")
curr.query <- curr.cohort %>% XenaGenerate() %>%
XenaQuery() %>% XenaDownload(destdir = "/users/yizhaoluan/projects/datasets/Xena")
curr.query <- curr.cohort %>% XenaGenerate() %>%
XenaQuery() %>% XenaDownload(destdir = "/users/yizhaoluan/projects/datasets/Xena")
curr.query <- curr.cohort %>% XenaGenerate() %>%
XenaQuery() %>% XenaDownload(destdir = "/users/yizhaoluan/projects/datasets/Xena")
curr.cohort <- XenaData %>%
filter(XenaHostNames == "tcgaHub") %>%
filter(DataSubtype == "gene expression RNAseq") %>%
XenaScan("TCGA Melanoma") %>%
XenaScan("pan")
curr.query <- curr.cohort %>% XenaGenerate() %>%
XenaQuery() %>% XenaDownload(destdir = "/users/yizhaoluan/projects/datasets/Xena")
curr.cohort <- XenaData %>%
filter(XenaHostNames == "tcgaHub") %>%
filter(DataSubtype == "gene expression RNAseq") %>%
XenaScan("TCGA Kidney Clear Cell Carcinoma") %>%
XenaScan("pan")
curr.query <- curr.cohort %>% XenaGenerate() %>%
XenaQuery() %>% XenaDownload(destdir = "/users/yizhaoluan/projects/datasets/Xena")
curr.query <- curr.cohort %>% XenaGenerate() %>%
XenaQuery() %>% XenaDownload(destdir = "/users/yizhaoluan/projects/datasets/Xena")
~/XenaDownload.R
library(BSgenome.Hsapiens.UCSC.hg38)
library(meta)
library(metafor)
## read data
proj.dir <- "/Users/yizhaoluan/projects/wanghuanli"
niaoye=read.csv(file.path(proj.dir, 'niaoye.csv') )
shizi=read.csv(file.path(proj.dir, 'shizi.csv'))
niaoye
shizi
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=shizi,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## 展示结果
summary(metarate)
## Forest plot
forest(metarate)
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=niaoye,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## Forest plot
forest(metarate)
## 展示结果
summary(metarate)871
## 展示结果
summary(metarate)
niaoye=read.csv(file.path(proj.dir, 'niaoye_t1.csv') )
shizi=read.csv(file.path(proj.dir, 'shizi_t1.csv'))
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=niaoye,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## Forest plot
forest(metarate)
## 展示结果
summary(metarate)
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=shizi,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## Forest plot
forest(metarate)
## 展示结果
summary(metarate)
niaoye=read.csv(file.path(proj.dir, 'niaoye_t2.csv') )
shizi=read.csv(file.path(proj.dir, 'shizi_t2.csv'))
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=shizi,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## Forest plot
forest(metarate)
## 展示结果
summary(metarate)
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=niaoye,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## Forest plot
forest(metarate)
## 展示结果
summary(metarate)
shizi=read.csv(file.path(proj.dir, 'shizi_t3.csv'))
niaoye=read.csv(file.path(proj.dir, 'niaoye_t3.csv') )
shizi=read.csv(file.path(proj.dir, 'shizi_t3.csv'))
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=niaoye,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## 展示结果
summary(metarate)
## meta analysis（由于阳性率在0-20%之间波动,sm选择为对数转换“PLOGIT”），具体参考：https://www.360qikan.com/baike/202004/36977.html
metarate<-metaprop(event,n, study, data=shizi,sm="PLOGIT",incr=0.5,allincr=FALSE,addincr=FALSE,
comb.fixed=TRUE,comb.random=TRUE,title="",complab="",print.byvar=TRUE, warn=TRUE)
## Forest plot
forest(metarate)
## 展示结果
summary(metarate)
## global dirs and objects
data.dir <- "/Users/yizhaoluan/Library/CloudStorage/OneDrive-个人/1My_Documents/projects/rna_cis/results"
combined.tomtom.between.samples.file <- file.path(data.dir, "combined_tomtom_between_samples_fiveUTR_4mer.txt")
combined.tomtom.to.known.file <- file.path(data.dir, "combined_tomtom_to_known_fiveUTR_4mer.txt")
combined.motifs.fiveutr.file <- file.path(data.dir, "combined_fiveUTR_motifs_four_samples.rds")
combined.peak2motifs.fiveutr.file <- file.path(data.dir, "combined_fiveUTR_peak2motifs_four_samples.rds")
combined.tomtom.between.samples <- read.table(combined.tomtom.between.samples.file, header=T, sep='\t', as.is=T)
dim(combined.tomtom.between.samples)
head(combined.tomtom.between.samples)
combined.tomtom.to.known <- read.table(combined.tomtom.to.known.file, header=T, sep='\t', as.is= T)
combined.motifs.fiveutr <- readRDS(file=combined.motifs.fiveutr.file)
head(combined.motifs.fiveutr)
combined.peak2motifs.fiveutr <- readRDS(file=combined.peak2motifs.fiveutr.file)
head(combined.tomtom.between.samples)
## requirements
require(dplyr)
head(combined.tomtom.between.samples)
summary(combined.tomtom.between.samples$pval)
summary(combined.tomtom.between.samples$qval)
table(combined.tomtom.between.samples$qval < 0.1)
table(combined.tomtom.between.samples$qval < 0.05)
sub.set <- combined.tomtom.between.samples %>% subset(qval < 0.1)
dim(sub.set)
head(sub.set)
sub.set <- combined.tomtom.between.samples %>% subset(qval < 0.1) %>%
group_by(query_sample, target_sample) %>%
summarize(n = n_distinct(query_motif))
dim(sub.set)
sub.set
sum(sub.set$n)
test.stat <- combined.tomtom.between.samples %>%
group_by(query_sample, target_sample) %>%
summarize(n = n_distinct(query_motif))
dim(test.stat)
test.stat
summary(combined.tomtom.to.known$pval)
## requirements
require(dplyr)
## global dirs and objects
data.dir <- "/Users/yizhaoluan/Library/CloudStorage/OneDrive-个人/1My_Documents/projects/rna_cis/results"
combined.tomtom.between.samples.file <- file.path(data.dir, "combined_tomtom_between_samples_fiveUTR_4mer.txt")
combined.tomtom.to.known.file <- file.path(data.dir, "combined_tomtom_to_known_fiveUTR_4mer.txt")
combined.motifs.fiveutr.file <- file.path(data.dir, "combined_fiveUTR_motifs_four_samples.rds")
combined.peak2motifs.fiveutr.file <- file.path(data.dir, "combined_fiveUTR_peak2motifs_four_samples.rds")
combined.tomtom.between.samples <- read.table(combined.tomtom.between.samples.file, header=T, sep='\t', as.is=T)
combined.tomtom.to.known <- read.table(combined.tomtom.to.known.file, header=T, sep='\t', as.is= T)
combined.motifs.fiveutr <- readRDS(file=combined.motifs.fiveutr.file)
combined.peak2motifs.fiveutr <- readRDS(file=combined.peak2motifs.fiveutr.file)
summary(combined.tomtom.to.known$pval)
summary(combined.tomtom.to.known$qval)
table(combined.tomtom.to.known$qval < 0.1)
table(combined.tomtom.to.known$qval < 0.05)
head(combined.tomtom.to.known)
sub.set <- combined.tomtom.to.known %>% subset(qval < 0.1) %>%
group_by(query_sample, target_db) %>%
summarize(n = n_distinct(query_motif))
sub.set
?choose
## global dirs and objects
data.dir <- "/Users/yizhaoluan/Library/CloudStorage/OneDrive-个人/1My_Documents/projects/rna_cis/results"
combined.tomtom.between.samples.file <- file.path(data.dir, "combined_tomtom_between_samples_fiveUTR_4mer.txt")
combined.tomtom.to.known.file <- file.path(data.dir, "combined_tomtom_to_known_fiveUTR_4mer.txt")
combined.motifs.fiveutr.file <- file.path(data.dir, "combined_fiveUTR_motifs_four_samples.rds")
combined.peak2motifs.fiveutr.file <- file.path(data.dir, "combined_fiveUTR_peak2motifs_four_samples.rds")
combined.tomtom.between.samples <- read.table(combined.tomtom.between.samples.file, header=T, sep='\t', as.is=T)
combined.tomtom.to.known <- read.table(combined.tomtom.to.known.file, header=T, sep='\t', as.is= T)
combined.motifs.fiveutr <- readRDS(file=combined.motifs.fiveutr.file)
combined.peak2motifs.fiveutr <- readRDS(file=combined.peak2motifs.fiveutr.file)
summary(combined.tomtom.to.known$pval)
summary(combined.tomtom.to.known$qval)
table(combined.tomtom.to.known$qval < 0.1)
table(combined.tomtom.to.known$qval < 0.05)
sub.set <- combined.tomtom.to.known %>% subset(qval < 0.1) %>%
group_by(query_sample, target_db) %>%
summarize(n = n_distinct(query_motif))
sub.set
colnames(sub.set) <- c('query_sample', 'target_db', 'n_motif_matches')
sub.set
summary(combined.tomtom.between.samples$pval)
summary(combined.tomtom.between.samples$qval)
table(combined.tomtom.between.samples$qval < 0.1)
table(combined.tomtom.between.samples$qval < 0.05)
sub.set <- combined.tomtom.between.samples %>% subset(qval < 0.1) %>%
group_by(query_sample, target_sample) %>%
summarize(n = n_distinct(query_motif))
sub.set
source("~/GitHub/rna-cis/code/3_motif_analysis_summary_mac_presentation.R", encoding = 'GB18030')
library(ggplot2)
library(GenomicRanges)
regulatory_elements <- GRanges(
seqnames = c("chr1", "chr1", "chr2"),
ranges = IRanges(start = c(100, 500, 200), end = c(200, 600, 300))
)
target_genes <- GRanges(
seqnames = c("chr1", "chr2", "chr2"),
ranges = IRanges(start = c(150, 250, 400), end = c(200, 300, 500))
)
# 绘制调控关系图
ggplot() +
geom_segment(aes(x = start(regulatory_elements), xend = start(target_genes),
y = seqnames(regulatory_elements), yend = seqnames(target_genes)),
color = "blue", size = 2) +
theme_bw() +
labs(x = "Position", y = "Chromosome") +
ggtitle("Regulatory Relationships") +
theme(plot.title = element_text(hjust = 0.5))
rlang::last_trace()
install.packages("shidashi")
library(ggExtra)
library(rmarkdown)
install.packages("ggExtra")
library(tools)
library(shidashi)
project <- file.path(tools::R_user_dir('shidashi', which = "data"), "AdminLTE3")
# `use_template` only needs to be called once
use_template(project)
render(project)
shiny::runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
library(SCpubr)
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk/script/demo-form.R')
runApp('GitHub/silk/script/demo-form.R')
runApp('GitHub/silk/script/demo-form.R')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk/script/demo-form.R')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk')
runApp('GitHub/silk/script/demo-fileInput.R')
runApp('GitHub/silk/script/demo-fileInput.R')
BiocManager::install("SingleCellSignalR")
library(SingleCellSignalR)
shiny::runApp('GitHub/silk')
library(future)
library(edgeR)
LRdb
markers_default
dim(LRdb)
class(LRdb)
head(LRdb)
library(tcltk)
runApp('GitHub/silk')
？shinyDirButton
?shynyDirButton
library(shiny)
library(shinyFiles)
?shynyDirButton
?shynyDirButton
?shinyDirButton
runApp('GitHub/silk')
runApp('GitHub/silk')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
## -------------
#* G6PD analysis
# library("rjson")
require(readxl)
proj.dir <- "/Users/yizhaoluan/onedrive163/OneDrive/1LuanYZ/1dr_projects/1dr_genetic.tumor"
data.dir <- file.path(proj.dir, 'G6PD')
## input gene variants
gene1 <- readxl::read_excel(file.path(data.dir,'111.xlsx'))
dim(gene1)
colnames(gene1)
## input gene variants
gene1 <- readxl::read_excel(file.path(data.dir,'111.xlsx'))
gene2 <- readxl::read_excel(file.path(data.dir,'分子附加.xlsx'), sheet = '')
gene2 <- readxl::read_excel(file.path(data.dir,'分子附加.xlsx'), sheet = 'DATA')
gene3 <- readxl::read_excel(file.path(data.dir,'新增基因型.xlsx'), sheet = 'DATA')
dim(gene2)
dim(gene3)
## input G6PD activity
protein1 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = ">15岁成人")
## input G6PD activity
protein1 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = "mt15year")
protein1.2 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = "mt29daylt15year")
protein1.3 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = "internal_neonatal")
protein1.4 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = "external")
protein1.5 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = "脐血库")
protein1 <- rbind(protein1.1, protein1.2, protein1.3, protein1.4, protein1.5)
protein1 <- rbind(protein1.1, protein1.2, protein1.3, protein1.4, protein1.5)
## input G6PD activity
protein1.1 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = "mt15year")
protein1 <- rbind(protein1.1, protein1.2, protein1.3, protein1.4, protein1.5)
protein2.1 <- readxl::read_excel(file.path(data.dir,'G6PD_20181115_20240630.xlsx'), sheet = "mt29day")
protein2.1 <- readxl::read_excel(file.path(data.dir,'G6PD_20181115_20240630.xlsx'), sheet = "mt29day")
protein2.2 <- readxl::read_excel(file.path(data.dir,'G6PD_20181115_20240630.xlsx'), sheet = "lt28day")
protein2.2 <- readxl::read_excel(file.path(data.dir,'G6PD_20181115_20240630.xlsx'), sheet = "lt28dat")
protein2.3 <- readxl::read_excel(file.path(data.dir,'G6PD_20181115_20240630.xlsx'), sheet = "外院")
protein2.4 <- readxl::read_excel(file.path(data.dir,'G6PD_20181115_20240630.xlsx'), sheet = "脐血库")
colnames(protein1.1.)
colnames(protein1.1)
colnames(protein1.2)
##* distribution of G6PD activity in 1st method
##*
protein1.combined = rbind(protein1.1[,c("诊疗卡号","s")],
protein1.2[,c("诊疗卡号","检验结果")],
protein1.3[,c("诊疗卡号","检验结果")],
protein1.4[,c("诊疗卡号","检验结果")],
protein1.5[,c("诊疗卡号","检验结果")]
)
colnames(protein1.1)
colnames(protein1.2)
colnames(protein1.2)
colnames(protein1.3)
head(protein1.1[,c("诊疗卡号","s")])
head(protein1.1[,c("诊疗卡号","检验结果")])
head(protein1.2[,c("诊疗卡号","检验结果")])
##* distribution of G6PD activity in 1st method
##*
protein1.combined = rbind(protein1.1[,c("诊疗卡号","s")],
protein1.2[,c("诊疗卡号","检验结果")],
protein1.3[,c("诊疗卡号","检验结果")],
protein1.4[,c("诊疗卡号","检验结果")],
protein1.5[,c("诊疗卡号","检验结果")]
)
head(protein1.3[,c("诊疗卡号","检验结果")])
head(protein1.4[,c("诊疗卡号","检验结果")])
head(protein1.5[,c("诊疗卡号","检验结果")])
## input G6PD activity, id column 诊疗卡号
protein1.1 <- readxl::read_excel(file.path(data.dir,'G6PD_2017_20181114.xlsx'), sheet = "mt15year")
##* distribution of G6PD activity in 1st method
##*
protein1.combined = rbind(protein1.1[,c("诊疗卡号","检验结果")],
protein1.2[,c("诊疗卡号","检验结果")],
protein1.3[,c("诊疗卡号","检验结果")],
protein1.4[,c("诊疗卡号","检验结果")],
protein1.5[,c("诊疗卡号","检验结果")]
)
protein2.combined <- rbind(
protein2.1[,c("诊疗卡号","检验结果")],
protein2.2[,c("诊疗卡号","检验结果")],
protein2.3[,c("诊疗卡号","检验结果")],
protein2.4[,c("诊疗卡号","检验结果")]
)
head(protein2.combined)
str(protein2.combined)
str(protein1.combined)
protein1.1$group <- rep('>15-Year', nrow(protein1.1))
protein1.2$group <- rep('>29-Day,<15-Year', nrow(protein1.2))
protein1.3$group <- rep('本院新生儿', nrow(protein1.3))
protein1.4$group <- rep('外院', nrow(protein1.4))
protein1.5$group <- rep('脐血库', nrow(protein1.5))
protein1.combined = rbind(protein1.1[,c("诊疗卡号","检验结果","group")],
protein1.2[,c("诊疗卡号","检验结果","group")],
protein1.3[,c("诊疗卡号","检验结果","group")],
protein1.4[,c("诊疗卡号","检验结果","group")],
protein1.5[,c("诊疗卡号","检验结果","group")]
)
protein2.1$group <- rep('>29-Day', nrow(protein2.1))
protein2.2$group <- rep('<29-Day', nrow(protein2.2))
protein2.3$group <- rep('外院', nrow(protein2.3))
protein2.4$group <- rep('脐血库', nrow(protein2.4))
protein2.combined <- rbind(
protein2.1[,c("诊疗卡号","检验结果","group")],
protein2.2[,c("诊疗卡号","检验结果","group")],
protein2.3[,c("诊疗卡号","检验结果","group")],
protein2.4[,c("诊疗卡号","检验结果","group")]
)
library(ggplot2)
library(reshape2)
library(dplyr)
## boxplots
ggplot(protein1.combined, aes(x=group, y=`检验结果`,fill=group)) + geom_boxplot()
## boxplots
protein1.combined$var = as.numeric(protein1.combined$`检验结果`)
ggplot(protein1.combined, aes(x=group, y=var,fill=group)) + geom_boxplot()
protein1.1$group <- rep('>15-Year', nrow(protein1.1))
protein1.2$group <- rep('>29-Day,<15-Year', nrow(protein1.2))
protein1.3$group <- rep('internal_neonatal', nrow(protein1.3))
protein1.4$group <- rep('external', nrow(protein1.4))
protein1.5$group <- rep('blood', nrow(protein1.5))
protein1.combined = rbind(protein1.1[,c("诊疗卡号","检验结果","group")],
protein1.2[,c("诊疗卡号","检验结果","group")],
protein1.3[,c("诊疗卡号","检验结果","group")],
protein1.4[,c("诊疗卡号","检验结果","group")],
protein1.5[,c("诊疗卡号","检验结果","group")]
)
protein2.1$group <- rep('>29-Day', nrow(protein2.1))
protein2.2$group <- rep('<29-Day', nrow(protein2.2))
protein2.3$group <- rep('external', nrow(protein2.3))
protein2.4$group <- rep('blood', nrow(protein2.4))
protein2.combined <- rbind(
protein2.1[,c("诊疗卡号","检验结果","group")],
protein2.2[,c("诊疗卡号","检验结果","group")],
protein2.3[,c("诊疗卡号","检验结果","group")],
protein2.4[,c("诊疗卡号","检验结果","group")]
)
## boxplots
protein1.combined$var = as.numeric(protein1.combined$`检验结果`)
ggplot(protein1.combined, aes(x=group, y=var,fill=group)) + geom_boxplot()
protein2.combined$var <- as.numeric(protein2.combined$`检验结果`)
ggplot(protein2.combined, aes(x=group, y=var,fill=group)) + geom_boxplot()
protein1.combined %>% group_by(group) %>% summirize(n=n())
protein1.combined %>% group_by(group) %>% summurise(n=n())
protein1.combined %>% group_by(group) %>% summarise(n=n())
protein2.combined %>% group_by(group) %>% summarise(n=n())
colnames(gene1)
colnames(gene1)
colnames(gene2)
colnames(gene3)
head(protein1.combined)
head(protein2.combined)
## correlate genetic variant and G6PD activity
protein1.combined$select <- ifelse(protein1.combined$`诊疗卡号` %in% c(gene1$`门诊号`, gene2$`病历号`, gene3$`病历号`), "yes", 'no')
protein2.combined$select <- ifelse(protein2.combined$`诊疗卡号` %in% c(gene1$`门诊号`, gene2$`病历号`, gene3$`病历号`), "yes", 'no')
table(protein1.combined$select)
table(protein2.combined$select)
dim(gene1)
dim(gene2)
dim(gene3)
dim(protein1.combined)
## correlate genetic variant and G6PD activity
select.case <- c(gene1$`门诊号`, gene2$`病历号`, gene3$`病历号`)
unique(select.case)
select.case <- select.case[select.case %in% c("----","---","--",NA]
select.case <- select.case[select.case %in% c("----","---","--",NA)]
protein1.combined$select <- ifelse(protein1.combined$`诊疗卡号` %in% select.case, "yes", 'no')
protein2.combined$select <- ifelse(protein2.combined$`诊疗卡号` %in% select.case, "yes", 'no')
table(protein1.combined$select)
table(protein2.combined$select)
## correlate genetic variant and G6PD activity
select.case <- c(gene1$`门诊号`, gene2$`病历号`, gene3$`病历号`)
select.case <- select.case[! select.case %in% c("----","---","--",NA)]
protein1.combined$select <- ifelse(protein1.combined$`诊疗卡号` %in% select.case, "yes", 'no')
protein2.combined$select <- ifelse(protein2.combined$`诊疗卡号` %in% select.case, "yes", 'no')
table(protein1.combined$select)
table(protein2.combined$select)
write.table(protein1.combined, file.path(data.dir, 'G6PD_1_combined_and_hits.tsv'), quote=F,sep='\t',row.names = F, col.names = T)
write.table(protein2.combined, file.path(data.dir, 'G6PD_2_combined_and_hits.tsv'), quote=F,sep='\t',row.names = F, col.names = T)
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
runApp()
library(slingshot)
library(dplyr)
rv <- readRDS("~/project/test_output/1_Rds/seurat.filtered.integrated.rds")
slingshot.data.input <- rv@reductions$umap@cell.embeddings
clust.col <- grep('RNA_snn_res', colnames(rv@meta.data), value=T)
slingshot.clustering <- rv@meta.data[,clust.col]
slingshot.counts <- as.matrix(rv@assays$RNA@counts)
## Run default slingshot lineage identification
set.seed(1)
lineages <- getLineages(data = slingshot.data.input, clusterLabels = slingshot.clustering)
# Define a color pallete to use
pal <- c(RColorBrewer::brewer.pal(9, "Set1"), RColorBrewer::brewer.pal(8, "Set2"))
# Plot the lineages
par(mfrow = c(1, 2))
plot(x= slingshot.data.input[, 1], y=slingshot.data.input[, 2], col = pal[slingshot.clustering], cex = 0.5, type = 'p')
for (i in unique(slingshot.clustering)) {
text(mean(slingshot.data.input[slingshot.clustering == i, 1]), mean(slingshot.data.input[slingshot.clustering == i, 2]), labels = i, font = 2)
}
plot(x= slingshot.data.input[, 1], y=slingshot.data.input[, 2], col = pal[slingshot.clustering], cex = 0.5, type = 'p')
sds <- as.SlingshotDataSet(lineages)
lines(sds, lwd = 3, col = "black")
# Plot the lineages
par(mfrow = c(1, 2))
plot(slingshot.data.input[, 1:2],  col = pal[slingshot.clustering], cex = 0.5, type = 'p')
for (i in unique(slingshot.clustering)) {
text(mean(slingshot.data.input[slingshot.clustering == i, 1]), mean(slingshot.data.input[slingshot.clustering == i, 2]), labels = i, font = 2)
}
plot(slingshot.data.input[, 1:2], col = pal[slingshot.clustering], cex = 0.5, type = 'p')
sds <- as.SlingshotDataSet(lineages)
lines(sds, lwd = 3, col = "black")
sds
curves <- getCurves(lineages, approx_points = 300, thresh = 0.01, stretch = 0.8, allow.breaks = FALSE, shrink = 0.99)
curves
curves.sds <- as.SlingshotDataSet(curves)
plot(slingshot.data.input[, 1:2], col = pal[slingshot.clustering], cex = 0.5, type = 'p')
lines(curves.sds, lwd = 3, col = "black")
curves.sds
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
trajectory_table_diffgenes
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
